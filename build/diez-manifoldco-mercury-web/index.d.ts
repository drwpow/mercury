// This file was generated with Diez - https://diez.org
// Do not edit this file directly.

export declare class RootComponent {}

export declare class Diez<T extends RootComponent> {
  constructor (baseClass: new () => T);
  readonly component: T;
  static applyHTMLExtensions(): void;
  attach(subscriber: (component: T) => void): void;
}

export declare class Color {
  /**
   * The raw color, suitable for usage in CSS and HTML.
   */
  color: string;
  /**
   * CSS declarations for the `color` CSS property.
   */
  colorStyle: {color: string};
  /**
   * CSS declarations for the `background-color` CSS property.
   */
  backgroundColorStyle: {backgroundColor: string};
  /**
   * CSS declarations for the `border-color` CSS property.
   */
  borderColorStyle: {borderColor: string};
  /**
   * CSS declarations for the `outline-color` CSS property.
   */
  outlineColorStyle: {outlineColor: string};
}

export declare class StylesColors {
  black: Color;
  white: Color;
  green: Color;
  mutedGreen: Color;
  red: Color;
  mutedRed: Color;
  blue: Color;
  mutedBlue: Color;
  yellow: Color;
  mutedYellow: Color;
  orange: Color;
  mutedOrange: Color;
  purple: Color;
  mutedPurple: Color;
  teal: Color;
  mutedTeal: Color;
  grayLightest: Color;
  grayLighter: Color;
  grayLight: Color;
  gray: Color;
  grayDark: Color;
  grayDarker: Color;
  black1: Color;
  colorYellow: Color;
}

export declare class GradientStop {
  position: number;
  color: Color;
}

export declare class Point2D {
  x: number;
  y: number;
}

export declare class LinearGradient {
  /**
   * The CSS linear-gradient representation of the `LinearGradient`.
   * @example
   * linear-gradient(45deg, hsla(0, 0%, 100%, 1) 0%, hsla(0, 0%, 0%, 1) 100%)
   */
  linearGradient: string;
  /**
   * CSS declarations for the `background-image` CSS property.
   */
  backgroundImageStyle: {backgroundImage: string};
  /**
   * CSS declarations for the `background` CSS property.
   */
  backgroundStyle: {background: string};
}

export declare class StylesGradients {
  gradientGreen: LinearGradient;
  gradientBrand: LinearGradient;
  gradientGreenMuted: LinearGradient;
  gradientBrand1: LinearGradient;
  gradientBrandMuted: LinearGradient;
  gradientBlue: LinearGradient;
  gradientBlueMuted: LinearGradient;
  gradientYellow: LinearGradient;
  gradientYellowMuted: LinearGradient;
  gradientOrange: LinearGradient;
  gradientOrangeMuted: LinearGradient;
  gradientPurple: LinearGradient;
  gradientPurpleMuted: LinearGradient;
  gradientRed: LinearGradient;
  gradientRedMuted: LinearGradient;
}

export declare class File {
  /**
   * The URL of the `File`
   */
  url: string;
}

export declare class Font {
  file: File;
  name: string;
  fallbacks: string[];
  weight: number;
  style: string;
}

export declare class Typograph {
  /**
   * An `Object` with CSS values for this `Typograph`.
   */
  style: {
    color: string,
    fontSize: string,
    fontFamily: string,
    fontWeight: number,
    fontStyle: string,
    lineHeight?: string,
    letterSpacing: number,
    textAlign: "start" | "left" | "right" | "center",
    textDecoration: string,
  };
  /**
   * Applies the `Typograph` CSS styles to the given HTMLElement.
   */
  applyStyle(ref: HTMLElement): void;
}

declare global {
  interface HTMLElement {
    /**
     * Applies a Diez Typograph definition to the element.
     *
     * You *must* have called `Diez.applyHTMLExtensions()` at least once to use this method.
     */
    applyTypograph(typograph: Typograph): void;
  }
}

export declare class StylesTypography {
  caption: Typograph;
  monoCaption: Typograph;
  label: Typograph;
  monoLabel: Typograph;
  body: Typograph;
  monoBody: Typograph;
  subheadingSmall: Typograph;
  subheading: Typograph;
  heading: Typograph;
  headingLarge: Typograph;
  headingExtraLarge: Typograph;
  sidebarBigTitle: Typograph;
  sidebarSmallTitle: Typograph;
  smallScreenCaption: Typograph;
  smallScreenLabel: Typograph;
  smallScreenBody: Typograph;
  smallScreenHeading: Typograph;
  smallScreenHeadingLarge: Typograph;
  smallScreenHeadingExtraLarge: Typograph;
}

export declare class DesignLanguage extends RootComponent {
  colors: StylesColors;
  gradients: StylesGradients;
  typography: StylesTypography;
}

